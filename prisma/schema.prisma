generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  address   String
  photoUrl  String
  email     String   @unique
  password  String
  name      String
  role      UserRole
  orders    Order[]
  createdAt DateTime @default(now())
}

model CompanyAdmin {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      UserRole
  photoUrl  String?
  createdAt DateTime @default(now())
}

model HotelAdmin {
  id           Int         @id @default(autoincrement())
  name         String
  email        String      @unique
  password     String
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  createdAt    DateTime    @default(now())
  confirmedOrders Order[]
  createdFoodItems FoodItem[]
  role         String      @default("HOTEL_ADMIN")
}

model Restaurant {
  id          Int           @id @default(autoincrement())
  name        String
  latitude    Float
  longitude   Float
  address     String
  hotelAdmins HotelAdmin[]
  foodItems   FoodItem[]
  orders      Order[]
  photoUrl    String
}

model FoodItem {
  id            Int          @id @default(autoincrement())
  name          String
  description   String
  price         Float
  isAvailable   Boolean      @default(true)
  tags          String[]     // e.g., ["veg", "spicy", "starter"]
  restaurant    Restaurant   @relation(fields: [restaurantId], references: [id])
  restaurantId  Int
  createdBy     HotelAdmin   @relation(fields: [createdById], references: [id])
  createdById   Int
  orderItems    OrderItem[]
  photoUrl      String
}

model Order {
  id             Int        @id @default(autoincrement())
  user           User       @relation(fields: [userId], references: [id])
  userId         Int
  restaurant     Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId   Int
  hotelAdmin     HotelAdmin? @relation(fields: [confirmedById], references: [id])
  confirmedById  Int?
  orderItems     OrderItem[]
  totalAmount    Float
  status         OrderStatus @default(PENDING)
  createdAt      DateTime   @default(now())
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
  foodItem   FoodItem @relation(fields: [foodItemId], references: [id])
  foodItemId Int
  quantity   Int
}

enum UserRole {
  CUSTOMER
  COMPANY_ADMIN
  HOTEL_ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  REJECTED
  DELIVERED
}
